buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url 'https://repo.spring.io/plugins-release' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.8.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.3.3.RELEASE"
        classpath "gradle.plugin.com.google.cloud.tools:jib-gradle-plugin:2.5.0"
    }
}

allprojects { project ->

    group "com.github.peacetrue.template"
    version "1.0.0-SNAPSHOT"
    description "gradle模板"

    apply plugin: "java"
    apply plugin: "java-library"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://repo.spring.io/plugins-release" }
    }

    apply plugin: "io.spring.dependency-management"
    apply plugin: 'org.springframework.boot'
    apply plugin: "com.google.cloud.tools.jib"
    dependencyManagement {
        imports {
            mavenBom "com.github.peacetrue:peacetrue-dependencies:2.0.0-SNAPSHOT"
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok"
        annotationProcessor "org.projectlombok:lombok"
        implementation "com.google.code.findbugs:jsr305"

        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }

        testCompileOnly "org.projectlombok:lombok"
        testAnnotationProcessor "org.projectlombok:lombok"
        testImplementation "ch.qos.logback:logback-classic"
        testImplementation 'io.projectreactor:reactor-test'
        testImplementation 'org.unitils:unitils-core'
        testImplementation 'org.jeasy:easy-random-core'
        testImplementation 'org.yaml:snakeyaml'
        testImplementation 'org.jeasy:easy-random-bean-validation', {
            exclude('group': 'org.yaml')
        }
    }

    test {
        useJUnitPlatform()
    }

    jib {
        from {
            //使用本地镜像，依赖本地 docker
            image = "docker://openjdk:11.0.8-jre"
            //使用仓库镜像，速度慢
            //image = "registry://docker.io/library/openjdk:11.0.8-jre"
        }

        to {
            //上传到阿里云镜像仓库
            image = "registry.cn-beijing.aliyuncs.com/peacetrue/$name"
            //image = "registry-vpc.cn-beijing.aliyuncs.com/peacetrue/$name"
            tags = [/*version,*/ 'latest']
        }

        container {
            //环境变量 docker 启动时指定
            //environment = ['SPRING_PROFILES_ACTIVE': 'prod']
            jvmFlags = ['-Xmx256m', '-Xms128m', '-Xmn96m', '-Xss256k']
            //CMD [jib.container.args]
            //args = ['--spring.profiles.active=prod']
            creationTime = 'USE_CURRENT_TIMESTAMP'
        }

    }

}
